{"ast":null,"code":"var _jsxFileName = \"/home/capucine/WebDev/cmaoyt_spring/cmaoyt/src/index.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './layout/App';\n// import reportWebVitals from './reportWebVitals';\n// import { ThemeProvider } from '@mui/material';\n// import { theme } from './styles/theme';\n\n// const root = ReactDOM.createRoot(\n//   document.getElementById('root') as HTMLElement\n// );\n// root.render(\n//   <React.StrictMode>\n//     <ThemeProvider theme={theme}>\n//       <App />\n//     </ThemeProvider>\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React, { createContext, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport './index.css';\nimport App from './layout/App';\nimport { auth } from './firebase/firebase';\nimport Loading from './pages/Loading';\nimport reportWebVitals from './reportWebVitals';\nimport { getDBUser } from './firebase/firestore';\nimport { FlashMessage, flashTimeout } from './types/flash';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultDBUser = {\n  isLogged: false,\n  name: '',\n  role: ''\n};\nexport const DBUserContext = /*#__PURE__*/createContext(defaultDBUser);\nexport const FlashContext = /*#__PURE__*/createContext(undefined);\nconst AppContainer = () => {\n  _s();\n  const [content, setContent] = useState( /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 56\n  }, this));\n  const [user] = useAuthState(auth); // from firebase\n  const [dbUser, setDBUSer] = useState(defaultDBUser);\n  const [flashes, setFlashes] = useState([]);\n  const flashesRef = useRef(flashes);\n  flashesRef.current = flashes;\n\n  // flashState implements FlashStates. It wraps the necessary functions to be\n  // passed to the FlashContext.\n  const flashState = {\n    getMessages: () => {\n      return flashes;\n    },\n    // add a flash to the list and set a timeout on it\n    addMessage: (message, level) => {\n      const flash = new FlashMessage(message, level);\n      const newFlashes = [...flashes, flash];\n      setFlashes(newFlashes);\n\n      // remove the flash after some timeout\n      setTimeout(() => {\n        let removedFlashes = [...flashesRef.current];\n        removedFlashes = removedFlashes.filter(f => f.id !== flash.id);\n        setFlashes(removedFlashes);\n      }, flashTimeout);\n    },\n    // Set the visibility of flashMessage to false\n    hideMessage: id => {\n      let removedFlashes = [...flashesRef.current];\n      removedFlashes = removedFlashes.filter(f => f.id !== id);\n      setFlashes(removedFlashes);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      getDBUser(user.uid, flashState).then(newDBUser => {\n        if (newDBUser !== undefined) {\n          setDBUSer(newDBUser);\n          setContent( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 22\n          }, this));\n        }\n      });\n    } else {\n      setContent( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 18\n      }, this));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(FlashContext.Provider, {\n    value: flashState,\n    children: /*#__PURE__*/_jsxDEV(DBUserContext.Provider, {\n      value: dbUser,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AppContainer, \"8MpyCGboTJB7YWOlKnn4z8ZVJEg=\", false, function () {\n  return [useAuthState];\n});\n_c = AppContainer;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(AppContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this)\n}, void 0, false));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["React","createContext","useEffect","useRef","useState","ReactDOM","useAuthState","App","auth","Loading","reportWebVitals","getDBUser","FlashMessage","flashTimeout","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultDBUser","isLogged","name","role","DBUserContext","FlashContext","undefined","AppContainer","_s","content","setContent","fileName","_jsxFileName","lineNumber","columnNumber","user","dbUser","setDBUSer","flashes","setFlashes","flashesRef","current","flashState","getMessages","addMessage","message","level","flash","newFlashes","setTimeout","removedFlashes","filter","f","id","hideMessage","uid","then","newDBUser","Provider","value","children","ThemeProvider","theme","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt/src/index.tsx"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './layout/App';\n// import reportWebVitals from './reportWebVitals';\n// import { ThemeProvider } from '@mui/material';\n// import { theme } from './styles/theme';\n\n// const root = ReactDOM.createRoot(\n//   document.getElementById('root') as HTMLElement\n// );\n// root.render(\n//   <React.StrictMode>\n//     <ThemeProvider theme={theme}>\n//       <App />\n//     </ThemeProvider>\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React, {\n  createContext,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport './index.css';\nimport App from './layout/App';\nimport { auth } from './firebase/firebase';\nimport Loading from './pages/Loading';\nimport reportWebVitals from './reportWebVitals';\nimport { DBUser } from './types/user';\nimport { getDBUser } from './firebase/firestore';\nimport { FlashMessage, FlashState, flashTimeout } from './types/flash';\n\nconst defaultDBUser: DBUser = { isLogged: false, name: '', role: '' };\n\nexport const DBUserContext = createContext<DBUser>(defaultDBUser);\n\nexport const FlashContext = createContext<FlashState | undefined>(undefined);\n\nconst AppContainer = () => {\n  const [content, setContent] = useState<ReactElement>(<Loading />);\n  const [user] = useAuthState(auth); // from firebase\n  const [dbUser, setDBUSer] = useState<DBUser>(defaultDBUser);\n  const [flashes, setFlashes] = useState<FlashMessage[]>([]);\n\n  const flashesRef = useRef(flashes);\n  flashesRef.current = flashes;\n\n  // flashState implements FlashStates. It wraps the necessary functions to be\n  // passed to the FlashContext.\n  const flashState = {\n    getMessages: (): FlashMessage[] => {\n      return flashes;\n    },\n\n    // add a flash to the list and set a timeout on it\n    addMessage: (message: string, level: number) => {\n      const flash = new FlashMessage(message, level);\n      const newFlashes = [...flashes, flash];\n      setFlashes(newFlashes);\n\n      // remove the flash after some timeout\n      setTimeout(() => {\n        let removedFlashes = [...flashesRef.current];\n        removedFlashes = removedFlashes.filter((f) => f.id !== flash.id);\n        setFlashes(removedFlashes);\n      }, flashTimeout);\n    },\n\n    // Set the visibility of flashMessage to false\n    hideMessage: (id: string) => {\n      let removedFlashes = [...flashesRef.current];\n      removedFlashes = removedFlashes.filter((f) => f.id !== id);\n      setFlashes(removedFlashes);\n    },\n  };\n\n  useEffect(() => {\n    if (user) {\n      getDBUser(user.uid, flashState).then((newDBUser) => {\n        if (newDBUser !== undefined) {\n          setDBUSer(newDBUser);\n          setContent(<App />);\n        }\n      });\n    } else {\n      setContent(<App />);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  return (\n    <FlashContext.Provider value={flashState}>\n      <DBUserContext.Provider value={dbUser}>\n        <ThemeProvider theme={theme}>{content}</ThemeProvider>\n      </DBUserContext.Provider>\n    </FlashContext.Provider>\n  );\n};\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <>\n    <AppContainer />\n  </>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}