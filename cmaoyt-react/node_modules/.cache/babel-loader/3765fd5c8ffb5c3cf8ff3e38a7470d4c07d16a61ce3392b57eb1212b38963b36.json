{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import Menu from '@mui/material/Menu';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import Container from '@mui/material/Container';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import Tooltip from '@mui/material/Tooltip';\n// import MenuItem from '@mui/material/MenuItem';\n// import AdbIcon from '@mui/icons-material/Adb';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = ['Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\nfunction ResponsiveAppBar() {\n  _s();\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // <AppBar position=\"static\">\n  //   <Container maxWidth=\"xl\">\n  //     <Toolbar disableGutters>\n  //       <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n  //       <Typography\n  //         variant=\"h6\"\n  //         noWrap\n  //         component=\"a\"\n  //         href=\"#app-bar-with-responsive-menu\"\n  //         sx={{\n  //           mr: 2,\n  //           display: { xs: 'none', md: 'flex' },\n  //           fontFamily: 'monospace',\n  //           fontWeight: 700,\n  //           letterSpacing: '.3rem',\n  //           color: 'inherit',\n  //           textDecoration: 'none',\n  //         }}\n  //       >\n  //         LOGO\n  //       </Typography>\n\n  //       <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n  //         <IconButton\n  //           size=\"large\"\n  //           aria-label=\"account of current user\"\n  //           aria-controls=\"menu-appbar\"\n  //           aria-haspopup=\"true\"\n  //           onClick={handleOpenNavMenu}\n  //           color=\"inherit\"\n  //         >\n  //           <MenuIcon />\n  //         </IconButton>\n  //         <Menu\n  //           id=\"menu-appbar\"\n  //           anchorEl={anchorElNav}\n  //           anchorOrigin={{\n  //             vertical: 'bottom',\n  //             horizontal: 'left',\n  //           }}\n  //           keepMounted\n  //           transformOrigin={{\n  //             vertical: 'top',\n  //             horizontal: 'left',\n  //           }}\n  //           open={Boolean(anchorElNav)}\n  //           onClose={handleCloseNavMenu}\n  //           sx={{\n  //             display: { xs: 'block', md: 'none' },\n  //           }}\n  //         >\n  //           {pages.map((page) => (\n  //             <MenuItem key={page} onClick={handleCloseNavMenu}>\n  //               <Typography textAlign=\"center\">{page}</Typography>\n  //             </MenuItem>\n  //           ))}\n  //         </Menu>\n  //       </Box>\n  //       <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n  //       <Typography\n  //         variant=\"h5\"\n  //         noWrap\n  //         component=\"a\"\n  //         href=\"#app-bar-with-responsive-menu\"\n  //         sx={{\n  //           mr: 2,\n  //           display: { xs: 'flex', md: 'none' },\n  //           flexGrow: 1,\n  //           fontFamily: 'monospace',\n  //           fontWeight: 700,\n  //           letterSpacing: '.3rem',\n  //           color: 'inherit',\n  //           textDecoration: 'none',\n  //         }}\n  //       >\n  //         LOGO\n  //       </Typography>\n  //       <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n  //         {pages.map((page) => (\n  //           <Button\n  //             key={page}\n  //             onClick={handleCloseNavMenu}\n  //             sx={{ my: 2, color: 'white', display: 'block' }}\n  //           >\n  //             {page}\n  //           </Button>\n  //         ))}\n  //       </Box>\n\n  //       <Box sx={{ flexGrow: 0 }}>\n  //         <Tooltip title=\"Open settings\">\n  //           <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n  //             <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n  //           </IconButton>\n  //         </Tooltip>\n  //         <Menu\n  //           sx={{ mt: '45px' }}\n  //           id=\"menu-appbar\"\n  //           anchorEl={anchorElUser}\n  //           anchorOrigin={{\n  //             vertical: 'top',\n  //             horizontal: 'right',\n  //           }}\n  //           keepMounted\n  //           transformOrigin={{\n  //             vertical: 'top',\n  //             horizontal: 'right',\n  //           }}\n  //           open={Boolean(anchorElUser)}\n  //           onClose={handleCloseUserMenu}\n  //         >\n  //           {settings.map((setting) => (\n  //             <MenuItem key={setting} onClick={handleCloseUserMenu}>\n  //               <Typography textAlign=\"center\">{setting}</Typography>\n  //             </MenuItem>\n  //           ))}\n  //         </Menu>\n  //       </Box>\n  //     </Toolbar>\n  //   </Container>\n  // </AppBar>\n  ;\n}\n_s(ResponsiveAppBar, \"QIsqpM/yGRL4/FzrSPXSWTpMbZs=\");\n_c = ResponsiveAppBar;\nexport default ResponsiveAppBar;\nvar _c;\n$RefreshReg$(_c, \"ResponsiveAppBar\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","pages","settings","ResponsiveAppBar","_s","anchorElNav","setAnchorElNav","useState","anchorElUser","setAnchorElUser","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","_c","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt/src/layout/ResponsiveAppBar.tsx"],"sourcesContent":["import * as React from 'react';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import Toolbar from '@mui/material/Toolbar';\n// import IconButton from '@mui/material/IconButton';\n// import Typography from '@mui/material/Typography';\n// import Menu from '@mui/material/Menu';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import Container from '@mui/material/Container';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import Tooltip from '@mui/material/Tooltip';\n// import MenuItem from '@mui/material/MenuItem';\n// import AdbIcon from '@mui/icons-material/Adb';\n\nconst pages = ['Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nfunction ResponsiveAppBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(\n    null\n  );\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <></>\n    // <AppBar position=\"static\">\n    //   <Container maxWidth=\"xl\">\n    //     <Toolbar disableGutters>\n    //       <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\n    //       <Typography\n    //         variant=\"h6\"\n    //         noWrap\n    //         component=\"a\"\n    //         href=\"#app-bar-with-responsive-menu\"\n    //         sx={{\n    //           mr: 2,\n    //           display: { xs: 'none', md: 'flex' },\n    //           fontFamily: 'monospace',\n    //           fontWeight: 700,\n    //           letterSpacing: '.3rem',\n    //           color: 'inherit',\n    //           textDecoration: 'none',\n    //         }}\n    //       >\n    //         LOGO\n    //       </Typography>\n\n    //       <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n    //         <IconButton\n    //           size=\"large\"\n    //           aria-label=\"account of current user\"\n    //           aria-controls=\"menu-appbar\"\n    //           aria-haspopup=\"true\"\n    //           onClick={handleOpenNavMenu}\n    //           color=\"inherit\"\n    //         >\n    //           <MenuIcon />\n    //         </IconButton>\n    //         <Menu\n    //           id=\"menu-appbar\"\n    //           anchorEl={anchorElNav}\n    //           anchorOrigin={{\n    //             vertical: 'bottom',\n    //             horizontal: 'left',\n    //           }}\n    //           keepMounted\n    //           transformOrigin={{\n    //             vertical: 'top',\n    //             horizontal: 'left',\n    //           }}\n    //           open={Boolean(anchorElNav)}\n    //           onClose={handleCloseNavMenu}\n    //           sx={{\n    //             display: { xs: 'block', md: 'none' },\n    //           }}\n    //         >\n    //           {pages.map((page) => (\n    //             <MenuItem key={page} onClick={handleCloseNavMenu}>\n    //               <Typography textAlign=\"center\">{page}</Typography>\n    //             </MenuItem>\n    //           ))}\n    //         </Menu>\n    //       </Box>\n    //       <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\n    //       <Typography\n    //         variant=\"h5\"\n    //         noWrap\n    //         component=\"a\"\n    //         href=\"#app-bar-with-responsive-menu\"\n    //         sx={{\n    //           mr: 2,\n    //           display: { xs: 'flex', md: 'none' },\n    //           flexGrow: 1,\n    //           fontFamily: 'monospace',\n    //           fontWeight: 700,\n    //           letterSpacing: '.3rem',\n    //           color: 'inherit',\n    //           textDecoration: 'none',\n    //         }}\n    //       >\n    //         LOGO\n    //       </Typography>\n    //       <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n    //         {pages.map((page) => (\n    //           <Button\n    //             key={page}\n    //             onClick={handleCloseNavMenu}\n    //             sx={{ my: 2, color: 'white', display: 'block' }}\n    //           >\n    //             {page}\n    //           </Button>\n    //         ))}\n    //       </Box>\n\n    //       <Box sx={{ flexGrow: 0 }}>\n    //         <Tooltip title=\"Open settings\">\n    //           <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n    //             <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n    //           </IconButton>\n    //         </Tooltip>\n    //         <Menu\n    //           sx={{ mt: '45px' }}\n    //           id=\"menu-appbar\"\n    //           anchorEl={anchorElUser}\n    //           anchorOrigin={{\n    //             vertical: 'top',\n    //             horizontal: 'right',\n    //           }}\n    //           keepMounted\n    //           transformOrigin={{\n    //             vertical: 'top',\n    //             horizontal: 'right',\n    //           }}\n    //           open={Boolean(anchorElUser)}\n    //           onClose={handleCloseUserMenu}\n    //         >\n    //           {settings.map((setting) => (\n    //             <MenuItem key={setting} onClick={handleCloseUserMenu}>\n    //               <Typography textAlign=\"center\">{setting}</Typography>\n    //             </MenuItem>\n    //           ))}\n    //         </Menu>\n    //       </Box>\n    //     </Toolbar>\n    //   </Container>\n    // </AppBar>\n  );\n}\nexport default ResponsiveAppBar;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC;AAC7C,MAAMC,QAAQ,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,CAAC;AAE9D,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAClD,IACF,CAAC;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,KAAK,CAACW,QAAQ,CACpD,IACF,CAAC;EAED,MAAMG,iBAAiB,GAAIC,KAAoC,IAAK;IAClEL,cAAc,CAACK,KAAK,CAACC,aAAa,CAAC;EACrC,CAAC;EACD,MAAMC,kBAAkB,GAAIF,KAAoC,IAAK;IACnEF,eAAe,CAACE,KAAK,CAACC,aAAa,CAAC;EACtC,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BR,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChCN,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACET,OAAA,CAAAF,SAAA,mnJQD,gBAAgB;AAAAa,EAAA,GAAhBb,gBAAgB;AAoJzB,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}