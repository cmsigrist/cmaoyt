{"ast":null,"code":"var _jsxFileName = \"/home/capucine/WebDev/cmaoyt_spring/cmaoyt/src/index.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './layout/App';\n// import reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@mui/material';\nimport { theme } from './styles/theme';\n\n// const root = ReactDOM.createRoot(\n//   document.getElementById('root') as HTMLElement\n// );\n// root.render(\n//   <React.StrictMode>\n//     <ThemeProvider theme={theme}>\n//       <App />\n//     </ThemeProvider>\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './layout/App';\n// import { auth } from './firebase/firebase';\n// import Loading from './pages/Loading';\nimport reportWebVitals from './reportWebVitals';\n// import { DBUser } from './types/user';\n// import { getDBUser } from './firebase/firestore';\n// import { FlashMessage, FlashState, flashTimeout } from './types/flash';\n\n// const defaultDBUser: DBUser = { isLogged: false, name: '', role: '' };\n\n// export const DBUserContext = createContext<DBUser>(defaultDBUser);\n\n// export const FlashContext = createContext<FlashState | undefined>(undefined);\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = () => {\n  _s();\n  // const [content, setContent] = useState<ReactElement>(<Loading />);\n  const [content, setContent] = useState( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 56\n  }, this));\n  // const [user] = useAuthState(auth); // from firebase\n  // const [dbUser, setDBUSer] = useState<DBUser>(defaultDBUser);\n  // const [flashes, setFlashes] = useState<FlashMessage[]>([]);\n\n  // const flashesRef = useRef(flashes);\n  // flashesRef.current = flashes;\n\n  // flashState implements FlashStates. It wraps the necessary functions to be\n  // passed to the FlashContext.\n  // const flashState = {\n  //   getMessages: (): FlashMessage[] => {\n  //     return flashes;\n  //   },\n\n  //   // add a flash to the list and set a timeout on it\n  //   addMessage: (message: string, level: number) => {\n  //     const flash = new FlashMessage(message, level);\n  //     const newFlashes = [...flashes, flash];\n  //     setFlashes(newFlashes);\n\n  //     // remove the flash after some timeout\n  //     setTimeout(() => {\n  //       let removedFlashes = [...flashesRef.current];\n  //       removedFlashes = removedFlashes.filter((f) => f.id !== flash.id);\n  //       setFlashes(removedFlashes);\n  //     }, flashTimeout);\n  //   },\n\n  //   // Set the visibility of flashMessage to false\n  //   hideMessage: (id: string) => {\n  //     let removedFlashes = [...flashesRef.current];\n  //     removedFlashes = removedFlashes.filter((f) => f.id !== id);\n  //     setFlashes(removedFlashes);\n  //   },\n  // };\n\n  // useEffect(() => {\n  //   if (user) {\n  //     getDBUser(user.uid, flashState).then((newDBUser) => {\n  //       if (newDBUser !== undefined) {\n  //         setDBUSer(newDBUser);\n  //         setContent(<App />);\n  //       }\n  //     });\n  //   } else {\n  //     setContent(<App />);\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [user]);\n\n  return (\n    /*#__PURE__*/\n    // <FlashContext.Provider value={flashState}>\n    // <DBUserContext.Provider value={dbUser}>\n    _jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n    // </DBUserContext.Provider>\n    // </FlashContext.Provider>\n  );\n};\n_s(AppContainer, \"AWo8Jvfka62IYvMQDMu2BTN2xL0=\");\n_c = AppContainer;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(AppContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this)\n}, void 0, false));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"AppContainer\");","map":{"version":3,"names":["ThemeProvider","theme","React","useState","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","_s","content","setContent","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt/src/index.tsx"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './layout/App';\n// import reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@mui/material';\nimport { theme } from './styles/theme';\n\n// const root = ReactDOM.createRoot(\n//   document.getElementById('root') as HTMLElement\n// );\n// root.render(\n//   <React.StrictMode>\n//     <ThemeProvider theme={theme}>\n//       <App />\n//     </ThemeProvider>\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport React, {\n  createContext,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport './index.css';\nimport App from './layout/App';\n// import { auth } from './firebase/firebase';\n// import Loading from './pages/Loading';\nimport reportWebVitals from './reportWebVitals';\n// import { DBUser } from './types/user';\n// import { getDBUser } from './firebase/firestore';\n// import { FlashMessage, FlashState, flashTimeout } from './types/flash';\n\n// const defaultDBUser: DBUser = { isLogged: false, name: '', role: '' };\n\n// export const DBUserContext = createContext<DBUser>(defaultDBUser);\n\n// export const FlashContext = createContext<FlashState | undefined>(undefined);\n\nconst AppContainer = () => {\n  // const [content, setContent] = useState<ReactElement>(<Loading />);\n  const [content, setContent] = useState<ReactElement>(<App />);\n  // const [user] = useAuthState(auth); // from firebase\n  // const [dbUser, setDBUSer] = useState<DBUser>(defaultDBUser);\n  // const [flashes, setFlashes] = useState<FlashMessage[]>([]);\n\n  // const flashesRef = useRef(flashes);\n  // flashesRef.current = flashes;\n\n  // flashState implements FlashStates. It wraps the necessary functions to be\n  // passed to the FlashContext.\n  // const flashState = {\n  //   getMessages: (): FlashMessage[] => {\n  //     return flashes;\n  //   },\n\n  //   // add a flash to the list and set a timeout on it\n  //   addMessage: (message: string, level: number) => {\n  //     const flash = new FlashMessage(message, level);\n  //     const newFlashes = [...flashes, flash];\n  //     setFlashes(newFlashes);\n\n  //     // remove the flash after some timeout\n  //     setTimeout(() => {\n  //       let removedFlashes = [...flashesRef.current];\n  //       removedFlashes = removedFlashes.filter((f) => f.id !== flash.id);\n  //       setFlashes(removedFlashes);\n  //     }, flashTimeout);\n  //   },\n\n  //   // Set the visibility of flashMessage to false\n  //   hideMessage: (id: string) => {\n  //     let removedFlashes = [...flashesRef.current];\n  //     removedFlashes = removedFlashes.filter((f) => f.id !== id);\n  //     setFlashes(removedFlashes);\n  //   },\n  // };\n\n  // useEffect(() => {\n  //   if (user) {\n  //     getDBUser(user.uid, flashState).then((newDBUser) => {\n  //       if (newDBUser !== undefined) {\n  //         setDBUSer(newDBUser);\n  //         setContent(<App />);\n  //       }\n  //     });\n  //   } else {\n  //     setContent(<App />);\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [user]);\n\n  return (\n    // <FlashContext.Provider value={flashState}>\n    // <DBUserContext.Provider value={dbUser}>\n    <ThemeProvider theme={theme}>{content}</ThemeProvider>\n    // </DBUserContext.Provider>\n    // </FlashContext.Provider>\n  );\n};\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <>\n    <AppContainer />\n  </>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,eAAe;AAC7C,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAOC,KAAK,IAKVC,QAAQ,QACH,OAAO;AACd,OAAOC,QAAQ,MAAM,kBAAkB;AAEvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,cAAc;AAC9B;AACA;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AACA;AACA;;AAEA;;AAEA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,eAAeK,OAAA,CAACH,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAC7D;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACA;IACAV,OAAA,CAACR,aAAa;MAACC,KAAK,EAAEA,KAAM;MAAAkB,QAAA,EAAEN;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB;IACrD;IACA;EAAA;AAEJ,CAAC;AAACN,EAAA,CA5DID,YAAY;AAAAS,EAAA,GAAZT,YAAY;AA8DlB,MAAMU,IAAI,GAAGjB,QAAQ,CAACkB,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAEDH,IAAI,CAACI,MAAM,eACTjB,OAAA,CAAAE,SAAA;EAAAS,QAAA,eACEX,OAAA,CAACG,YAAY;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,gBAChB,CACJ,CAAC;;AAED;AACA;AACA;AACAZ,eAAe,CAAC,CAAC;AAAC,IAAAc,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}