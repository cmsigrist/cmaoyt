{"ast":null,"code":"var _jsxFileName = \"/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx\";\nimport { Card, CardActionArea, CardMedia, Stack, Typography } from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeThumbnail = ({\n  metadata\n}) => {\n  const isCategory = metadata.recipes !== undefined;\n  const route = isCategory ? ROUTE_CATEGORY(metadata.type, metadata.category) : ROUTE_RECIPE(metadata.type, metadata.id);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    width: '100%',\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: route,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '480px',\n          marginBottom: 2,\n          justifySelf: 'center',\n          alignSelf: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"480px\",\n            image: dummy,\n            alt: \"green iguana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: route,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: 'black',\n        textAlign: 'center',\n        children: metadata.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n// <Box width={'100%'} display=\"flex\" justifyContent={'center'}>\n//   <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n//     {isCategory ? (\n//       <ImageList\n//         sx={{ width: '100%', height: '480px' }}\n//         variant=\"quilted\"\n//         cols={2}\n//         // rowHeight={\"240px\"}\n//       >\n//         {[].map((item) => (\n//           <ImageListItem\n//           // key={item.img}\n//           // cols={item.cols || 1}\n//           // rows={item.rows || 1}\n//           >\n//             {/* <img\n//                  {...srcset(item.img, 121, item.rows, item.cols)}\n//                  alt={item.title}\n//                  loading=\"lazy\"\n//                /> */}\n//           </ImageListItem>\n//         ))}\n//       </ImageList>\n//     ) : (\n//       <img\n//         // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n//         src={dummy}\n//         alt={metadata.title}\n//         loading=\"lazy\"\n//         height=\"480px\"\n//       />\n//     )}\n//   </Card>\n// </Box>\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n_c = RecipeThumbnail;\nexport default RecipeThumbnail;\nvar _c;\n$RefreshReg$(_c, \"RecipeThumbnail\");","map":{"version":3,"names":["Card","CardActionArea","CardMedia","Stack","Typography","ROUTE_CATEGORY","ROUTE_RECIPE","Link","dummy","jsxDEV","_jsxDEV","RecipeThumbnail","metadata","isCategory","recipes","undefined","route","type","category","id","width","direction","justifyContent","alignItems","children","to","sx","height","marginBottom","justifySelf","alignSelf","component","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","variant","color","textAlign","title","_c","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { CategoryMetadata, Metadata, RecipeMetadata } from '../types/recipe';\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  ImageList,\n  ImageListItem,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\n\nconst RecipeThumbnail: FC<{ metadata: Metadata }> = ({ metadata }) => {\n  const isCategory = metadata.recipes !== undefined;\n  const route = isCategory\n    ? ROUTE_CATEGORY(metadata.type, (metadata as CategoryMetadata).category)\n    : ROUTE_RECIPE(metadata.type, (metadata as RecipeMetadata).id);\n  return (\n    <Stack\n      width={'100%'}\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Link to={route}>\n        <Card\n          sx={{\n            height: '480px',\n            marginBottom: 2,\n            justifySelf: 'center',\n            alignSelf: 'center',\n          }}\n        >\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"480px\"\n              image={dummy}\n              alt=\"green iguana\"\n            />\n          </CardActionArea>\n        </Card>\n      </Link>\n      <Link to={route} style={{ textDecoration: 'none' }}>\n        <Typography variant=\"body1\" color={'black'} textAlign={'center'}>\n          {metadata.title}\n        </Typography>\n      </Link>\n    </Stack>\n  );\n};\n// <Box width={'100%'} display=\"flex\" justifyContent={'center'}>\n//   <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n//     {isCategory ? (\n//       <ImageList\n//         sx={{ width: '100%', height: '480px' }}\n//         variant=\"quilted\"\n//         cols={2}\n//         // rowHeight={\"240px\"}\n//       >\n//         {[].map((item) => (\n//           <ImageListItem\n//           // key={item.img}\n//           // cols={item.cols || 1}\n//           // rows={item.rows || 1}\n//           >\n//             {/* <img\n//                  {...srcset(item.img, 121, item.rows, item.cols)}\n//                  alt={item.title}\n//                  loading=\"lazy\"\n//                /> */}\n//           </ImageListItem>\n//         ))}\n//       </ImageList>\n//     ) : (\n//       <img\n//         // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n//         src={dummy}\n//         alt={metadata.title}\n//         loading=\"lazy\"\n//         height=\"480px\"\n//       />\n//     )}\n//   </Card>\n// </Box>\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n\nexport default RecipeThumbnail;\n"],"mappings":";AAEA,SAEEA,IAAI,EACJC,cAAc,EAEdC,SAAS,EAGTC,KAAK,EACLC,UAAU,QACL,eAAe;AACtB,SAASC,cAAc,EAAEC,YAAY,QAAQ,WAAW;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpE,MAAMC,UAAU,GAAGD,QAAQ,CAACE,OAAO,KAAKC,SAAS;EACjD,MAAMC,KAAK,GAAGH,UAAU,GACpBR,cAAc,CAACO,QAAQ,CAACK,IAAI,EAAGL,QAAQ,CAAsBM,QAAQ,CAAC,GACtEZ,YAAY,CAACM,QAAQ,CAACK,IAAI,EAAGL,QAAQ,CAAoBO,EAAE,CAAC;EAChE,oBACET,OAAA,CAACP,KAAK;IACJiB,KAAK,EAAE,MAAO;IACdC,SAAS,EAAC,QAAQ;IAClBC,cAAc,EAAC,QAAQ;IACvBC,UAAU,EAAC,QAAQ;IAAAC,QAAA,gBAEnBd,OAAA,CAACH,IAAI;MAACkB,EAAE,EAAET,KAAM;MAAAQ,QAAA,eACdd,OAAA,CAACV,IAAI;QACH0B,EAAE,EAAE;UACFC,MAAM,EAAE,OAAO;UACfC,YAAY,EAAE,CAAC;UACfC,WAAW,EAAE,QAAQ;UACrBC,SAAS,EAAE;QACb,CAAE;QAAAN,QAAA,eAEFd,OAAA,CAACT,cAAc;UAAAuB,QAAA,eACbd,OAAA,CAACR,SAAS;YACR6B,SAAS,EAAC,KAAK;YACfJ,MAAM,EAAC,OAAO;YACdK,KAAK,EAAExB,KAAM;YACbyB,GAAG,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACP3B,OAAA,CAACH,IAAI;MAACkB,EAAE,EAAET,KAAM;MAACsB,KAAK,EAAE;QAAEC,cAAc,EAAE;MAAO,CAAE;MAAAf,QAAA,eACjDd,OAAA,CAACN,UAAU;QAACoC,OAAO,EAAC,OAAO;QAACC,KAAK,EAAE,OAAQ;QAACC,SAAS,EAAE,QAAS;QAAAlB,QAAA,EAC7DZ,QAAQ,CAAC+B;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAO,EAAA,GAtFMjC,eAA2C;AAwFjD,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}