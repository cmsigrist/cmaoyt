{"ast":null,"code":"var _jsxFileName = \"/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx\";\nimport { Box, Card, CardActionArea, CardContent, CardMedia, Typography } from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeThumbnail = ({\n  metadata\n}) => {\n  const isCategory = metadata.recipes !== undefined;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: isCategory ? ROUTE_CATEGORY(metadata.type, metadata.category) : ROUTE_RECIPE(metadata.type, metadata.id),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: '100%' /* display=\"flex\" justifyContent={'center'} */,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxHeight: '480px',\n          width: '80%',\n          marginBottom: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\"\n            // height=\"450\"\n            ,\n            image: dummy,\n            alt: \"green iguana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                textDecoration: 'none'\n              },\n              textAlign: 'center',\n              children: metadata.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          textDecoration: 'none'\n        },\n        textAlign: 'center',\n        children: metadata.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n// <Box width={'100%'} display=\"flex\" justifyContent={'center'}>\n//   <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n//     {isCategory ? (\n//       <ImageList\n//         sx={{ width: '100%', height: '480px' }}\n//         variant=\"quilted\"\n//         cols={2}\n//         // rowHeight={\"240px\"}\n//       >\n//         {[].map((item) => (\n//           <ImageListItem\n//           // key={item.img}\n//           // cols={item.cols || 1}\n//           // rows={item.rows || 1}\n//           >\n//             {/* <img\n//                  {...srcset(item.img, 121, item.rows, item.cols)}\n//                  alt={item.title}\n//                  loading=\"lazy\"\n//                /> */}\n//           </ImageListItem>\n//         ))}\n//       </ImageList>\n//     ) : (\n//       <img\n//         // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n//         src={dummy}\n//         alt={metadata.title}\n//         loading=\"lazy\"\n//         height=\"480px\"\n//       />\n//     )}\n//   </Card>\n// </Box>\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n_c = RecipeThumbnail;\nexport default RecipeThumbnail;\nvar _c;\n$RefreshReg$(_c, \"RecipeThumbnail\");","map":{"version":3,"names":["Box","Card","CardActionArea","CardContent","CardMedia","Typography","ROUTE_CATEGORY","ROUTE_RECIPE","Link","dummy","jsxDEV","_jsxDEV","RecipeThumbnail","metadata","isCategory","recipes","undefined","to","type","category","id","children","width","sx","maxHeight","marginBottom","component","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","textDecoration","textAlign","title","_c","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { CategoryMetadata, Metadata, RecipeMetadata } from '../types/recipe';\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  ImageList,\n  ImageListItem,\n  Typography,\n} from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\n\nconst RecipeThumbnail: FC<{ metadata: Metadata }> = ({ metadata }) => {\n  const isCategory = metadata.recipes !== undefined;\n  return (\n    <Link\n      to={\n        isCategory\n          ? ROUTE_CATEGORY(\n              metadata.type,\n              (metadata as CategoryMetadata).category\n            )\n          : ROUTE_RECIPE(metadata.type, (metadata as RecipeMetadata).id)\n      }\n    >\n      <Box width={'100%'} /* display=\"flex\" justifyContent={'center'} */>\n        <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              // height=\"450\"\n              image={dummy}\n              alt=\"green iguana\"\n            />\n            <CardContent>\n              <Typography\n                variant=\"body1\"\n                sx={{ textDecoration: 'none' }}\n                textAlign={'center'}\n              >\n                {metadata.title}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <Typography\n          variant=\"body1\"\n          sx={{ textDecoration: 'none' }}\n          textAlign={'center'}\n        >\n          {metadata.title}\n        </Typography>\n      </Box>\n    </Link>\n  );\n};\n// <Box width={'100%'} display=\"flex\" justifyContent={'center'}>\n//   <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n//     {isCategory ? (\n//       <ImageList\n//         sx={{ width: '100%', height: '480px' }}\n//         variant=\"quilted\"\n//         cols={2}\n//         // rowHeight={\"240px\"}\n//       >\n//         {[].map((item) => (\n//           <ImageListItem\n//           // key={item.img}\n//           // cols={item.cols || 1}\n//           // rows={item.rows || 1}\n//           >\n//             {/* <img\n//                  {...srcset(item.img, 121, item.rows, item.cols)}\n//                  alt={item.title}\n//                  loading=\"lazy\"\n//                /> */}\n//           </ImageListItem>\n//         ))}\n//       </ImageList>\n//     ) : (\n//       <img\n//         // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n//         src={dummy}\n//         alt={metadata.title}\n//         loading=\"lazy\"\n//         height=\"480px\"\n//       />\n//     )}\n//   </Card>\n// </Box>\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n\nexport default RecipeThumbnail;\n"],"mappings":";AAEA,SACEA,GAAG,EACHC,IAAI,EACJC,cAAc,EACdC,WAAW,EACXC,SAAS,EAGTC,UAAU,QACL,eAAe;AACtB,SAASC,cAAc,EAAEC,YAAY,QAAQ,WAAW;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpE,MAAMC,UAAU,GAAGD,QAAQ,CAACE,OAAO,KAAKC,SAAS;EACjD,oBACEL,OAAA,CAACH,IAAI;IACHS,EAAE,EACAH,UAAU,GACNR,cAAc,CACZO,QAAQ,CAACK,IAAI,EACZL,QAAQ,CAAsBM,QACjC,CAAC,GACDZ,YAAY,CAACM,QAAQ,CAACK,IAAI,EAAGL,QAAQ,CAAoBO,EAAE,CAChE;IAAAC,QAAA,eAEDV,OAAA,CAACX,GAAG;MAACsB,KAAK,EAAE,MAAO,CAAC;MAAAD,QAAA,gBAClBV,OAAA,CAACV,IAAI;QAACsB,EAAE,EAAE;UAAEC,SAAS,EAAE,OAAO;UAAEF,KAAK,EAAE,KAAK;UAAEG,YAAY,EAAE;QAAE,CAAE;QAAAJ,QAAA,eAC9DV,OAAA,CAACT,cAAc;UAAAmB,QAAA,gBACbV,OAAA,CAACP,SAAS;YACRsB,SAAS,EAAC;YACV;YAAA;YACAC,KAAK,EAAElB,KAAM;YACbmB,GAAG,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACFrB,OAAA,CAACR,WAAW;YAAAkB,QAAA,eACVV,OAAA,CAACN,UAAU;cACT4B,OAAO,EAAC,OAAO;cACfV,EAAE,EAAE;gBAAEW,cAAc,EAAE;cAAO,CAAE;cAC/BC,SAAS,EAAE,QAAS;cAAAd,QAAA,EAEnBR,QAAQ,CAACuB;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACPrB,OAAA,CAACN,UAAU;QACT4B,OAAO,EAAC,OAAO;QACfV,EAAE,EAAE;UAAEW,cAAc,EAAE;QAAO,CAAE;QAC/BC,SAAS,EAAE,QAAS;QAAAd,QAAA,EAEnBR,QAAQ,CAACuB;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAK,EAAA,GA3FMzB,eAA2C;AA6FjD,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}