{"ast":null,"code":"var _jsxFileName = \"/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx\";\nimport { Box, Card, Typography } from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeThumbnail = ({\n  metadata\n}) => {\n  const isCategory = metadata.recipes !== undefined;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: isCategory ? ROUTE_CATEGORY(metadata.type, metadata.category) : ROUTE_RECIPE(metadata.type, metadata.id),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxHeight: '480px'\n        },\n        children: isCategory ? /*#__PURE__*/_jsxDEV(\"img\", {\n          // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n          src: dummy,\n          alt: metadata.title,\n          loading: \"lazy\",\n          \"object-fit\": \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ImageList, {\n          sx: {\n            width: 500,\n            height: 450\n          },\n          variant: \"quilted\",\n          cols: 4,\n          rowHeight: 121,\n          children: itemData.map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n            cols: item.cols || 1,\n            rows: item.rows || 1,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              ...srcset(item.img, 121, item.rows, item.cols),\n              alt: item.title,\n              loading: \"lazy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)\n          }, item.img, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      textAlign: 'center',\n      children: metadata.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n_c = RecipeThumbnail;\nexport default RecipeThumbnail;\nvar _c;\n$RefreshReg$(_c, \"RecipeThumbnail\");","map":{"version":3,"names":["Box","Card","Typography","ROUTE_CATEGORY","ROUTE_RECIPE","Link","dummy","jsxDEV","_jsxDEV","RecipeThumbnail","metadata","isCategory","recipes","undefined","to","type","category","id","children","sx","maxHeight","src","alt","title","loading","fileName","_jsxFileName","lineNumber","columnNumber","ImageList","width","height","variant","cols","rowHeight","itemData","map","item","ImageListItem","rows","srcset","img","textAlign","_c","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { CategoryMetadata, Metadata, RecipeMetadata } from '../types/recipe';\nimport { Box, Card, Typography } from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\n\nconst RecipeThumbnail: FC<{ metadata: Metadata }> = ({ metadata }) => {\n  const isCategory = metadata.recipes !== undefined;\n  return (\n    <Link\n      to={\n        isCategory\n          ? ROUTE_CATEGORY(\n              metadata.type,\n              (metadata as CategoryMetadata).category\n            )\n          : ROUTE_RECIPE(metadata.type, (metadata as RecipeMetadata).id)\n      }\n    >\n      <Box>\n        <Card sx={{ maxHeight: '480px' }}>\n          {isCategory ? (\n            <img\n              // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n              src={dummy}\n              alt={metadata.title}\n              loading=\"lazy\"\n              object-fit=\"cover\"\n            />\n          ) : (\n            <ImageList\n              sx={{ width: 500, height: 450 }}\n              variant=\"quilted\"\n              cols={4}\n              rowHeight={121}\n            >\n              {itemData.map((item) => (\n                <ImageListItem\n                  key={item.img}\n                  cols={item.cols || 1}\n                  rows={item.rows || 1}\n                >\n                  <img\n                    {...srcset(item.img, 121, item.rows, item.cols)}\n                    alt={item.title}\n                    loading=\"lazy\"\n                  />\n                </ImageListItem>\n              ))}\n            </ImageList>\n          )}\n        </Card>\n      </Box>\n      <Typography textAlign={'center'}>{metadata.title}</Typography>\n    </Link>\n  );\n};\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n\nexport default RecipeThumbnail;\n"],"mappings":";AAEA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AACrD,SAASC,cAAc,EAAEC,YAAY,QAAQ,WAAW;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpE,MAAMC,UAAU,GAAGD,QAAQ,CAACE,OAAO,KAAKC,SAAS;EACjD,oBACEL,OAAA,CAACH,IAAI;IACHS,EAAE,EACAH,UAAU,GACNR,cAAc,CACZO,QAAQ,CAACK,IAAI,EACZL,QAAQ,CAAsBM,QACjC,CAAC,GACDZ,YAAY,CAACM,QAAQ,CAACK,IAAI,EAAGL,QAAQ,CAAoBO,EAAE,CAChE;IAAAC,QAAA,gBAEDV,OAAA,CAACR,GAAG;MAAAkB,QAAA,eACFV,OAAA,CAACP,IAAI;QAACkB,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAQ,CAAE;QAAAF,QAAA,EAC9BP,UAAU,gBACTH,OAAA;UACE;UACAa,GAAG,EAAEf,KAAM;UACXgB,GAAG,EAAEZ,QAAQ,CAACa,KAAM;UACpBC,OAAO,EAAC,MAAM;UACd,cAAW;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,gBAEFpB,OAAA,CAACqB,SAAS;UACRV,EAAE,EAAE;YAAEW,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI,CAAE;UAChCC,OAAO,EAAC,SAAS;UACjBC,IAAI,EAAE,CAAE;UACRC,SAAS,EAAE,GAAI;UAAAhB,QAAA,EAEdiB,QAAQ,CAACC,GAAG,CAAEC,IAAI,iBACjB7B,OAAA,CAAC8B,aAAa;YAEZL,IAAI,EAAEI,IAAI,CAACJ,IAAI,IAAI,CAAE;YACrBM,IAAI,EAAEF,IAAI,CAACE,IAAI,IAAI,CAAE;YAAArB,QAAA,eAErBV,OAAA;cAAA,GACMgC,MAAM,CAACH,IAAI,CAACI,GAAG,EAAE,GAAG,EAAEJ,IAAI,CAACE,IAAI,EAAEF,IAAI,CAACJ,IAAI,CAAC;cAC/CX,GAAG,EAAEe,IAAI,CAACd,KAAM;cAChBC,OAAO,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf;UAAC,GARGS,IAAI,CAACI,GAAG;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASA,CAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MACZ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNpB,OAAA,CAACN,UAAU;MAACwC,SAAS,EAAE,QAAS;MAAAxB,QAAA,EAAER,QAAQ,CAACa;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAe,EAAA,GAhEMlC,eAA2C;AAkEjD,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}