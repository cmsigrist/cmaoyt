{"ast":null,"code":"var _jsxFileName = \"/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/pages/Desserts.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { RecipeType } from '../types/recipe';\nimport { api } from '../api/axiosConfig';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Desserts = () => {\n  _s();\n  const [desserts, setDesserts] = useState([]);\n  useEffect(() => {\n    api(RecipeType.Desserts).get('/all').then(result => setDesserts(result.data)).catch(reason => console.error(reason));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyItems: 'center',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    alignContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Desserts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), desserts.map(dessert => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: dessert.title\n    }, dessert.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Desserts, \"NK1+bW7b8DcxtWnMg/nVOkiU1U8=\");\n_c = Desserts;\nexport default Desserts;\nvar _c;\n$RefreshReg$(_c, \"Desserts\");","map":{"version":3,"names":["useEffect","useState","RecipeType","api","Box","Typography","jsxDEV","_jsxDEV","Desserts","_s","desserts","setDesserts","get","then","result","data","catch","reason","console","error","display","justifyItems","justifyContent","alignItems","alignContent","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","dessert","title","_c","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/pages/Desserts.tsx"],"sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { Metadata, RecipeType } from '../types/recipe';\nimport { api } from '../api/axiosConfig';\nimport { Box, Container, Typography } from '@mui/material';\n\nconst Desserts: FC = () => {\n  const [desserts, setDesserts] = useState<Metadata[]>([]);\n\n  useEffect(() => {\n    api(RecipeType.Desserts)\n      .get('/all')\n      .then((result) => setDesserts(result.data))\n      .catch((reason) => console.error(reason));\n  }, []);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyItems={'center'}\n      justifyContent={'center'}\n      alignItems=\"center\"\n      alignContent=\"center\"\n    >\n      <Typography variant=\"h2\">Desserts</Typography>\n      {desserts.map((dessert) => (\n        <p key={dessert.title}>{dessert.title}</p>\n      ))}\n    </Box>\n  );\n};\n\nexport default Desserts;\n"],"mappings":";;AAAA,SAAaA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAAmBC,UAAU,QAAQ,iBAAiB;AACtD,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,GAAG,EAAaC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAa,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdG,GAAG,CAACD,UAAU,CAACM,QAAQ,CAAC,CACrBI,GAAG,CAAC,MAAM,CAAC,CACXC,IAAI,CAAEC,MAAM,IAAKH,WAAW,CAACG,MAAM,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAAEC,MAAM,IAAKC,OAAO,CAACC,KAAK,CAACF,MAAM,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACH,GAAG;IACFgB,OAAO,EAAC,MAAM;IACdC,YAAY,EAAE,QAAS;IACvBC,cAAc,EAAE,QAAS;IACzBC,UAAU,EAAC,QAAQ;IACnBC,YAAY,EAAC,QAAQ;IAAAC,QAAA,gBAErBlB,OAAA,CAACF,UAAU;MAACqB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAC7CpB,QAAQ,CAACqB,GAAG,CAAEC,OAAO,iBACpBzB,OAAA;MAAAkB,QAAA,EAAwBO,OAAO,CAACC;IAAK,GAA7BD,OAAO,CAACC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxBID,QAAY;AAAA0B,EAAA,GAAZ1B,QAAY;AA0BlB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}