{"ast":null,"code":"var _jsxFileName = \"/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx\";\nimport { Card, CardActionArea, CardContent, CardMedia, Typography } from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeThumbnail = ({\n  metadata\n}) => {\n  const isCategory = metadata.recipes !== undefined;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: isCategory ? ROUTE_CATEGORY(metadata.type, metadata.category) : ROUTE_RECIPE(metadata.type, metadata.id),\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxHeight: '480px',\n        width: '80%',\n        marginBottom: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\"\n          // height=\"450\"\n          ,\n          image: dummy,\n          alt: \"green iguana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: \"Lizard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n// <Box width={'100%'} display=\"flex\" justifyContent={'center'}>\n//   <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n//     {isCategory ? (\n//       <ImageList\n//         sx={{ width: '100%', height: '480px' }}\n//         variant=\"quilted\"\n//         cols={2}\n//         // rowHeight={\"240px\"}\n//       >\n//         {[].map((item) => (\n//           <ImageListItem\n//           // key={item.img}\n//           // cols={item.cols || 1}\n//           // rows={item.rows || 1}\n//           >\n//             {/* <img\n//                  {...srcset(item.img, 121, item.rows, item.cols)}\n//                  alt={item.title}\n//                  loading=\"lazy\"\n//                /> */}\n//           </ImageListItem>\n//         ))}\n//       </ImageList>\n//     ) : (\n//       <img\n//         // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n//         src={dummy}\n//         alt={metadata.title}\n//         loading=\"lazy\"\n//         height=\"480px\"\n//       />\n//     )}\n//   </Card>\n// </Box>\n// <Typography sx={{ textDecoration: 'none' }} textAlign={'center'}>\n//   {metadata.title}\n// </Typography>\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n_c = RecipeThumbnail;\nexport default RecipeThumbnail;\nvar _c;\n$RefreshReg$(_c, \"RecipeThumbnail\");","map":{"version":3,"names":["Card","CardActionArea","CardContent","CardMedia","Typography","ROUTE_CATEGORY","ROUTE_RECIPE","Link","dummy","jsxDEV","_jsxDEV","RecipeThumbnail","metadata","isCategory","recipes","undefined","to","type","category","id","children","sx","maxHeight","width","marginBottom","component","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","variant","color","_c","$RefreshReg$"],"sources":["/home/capucine/WebDev/cmaoyt_spring/cmaoyt-react/src/components/RecipeThumbnail.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { CategoryMetadata, Metadata, RecipeMetadata } from '../types/recipe';\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  ImageList,\n  ImageListItem,\n  Typography,\n} from '@mui/material';\nimport { ROUTE_CATEGORY, ROUTE_RECIPE } from '../routes';\nimport { Link } from 'react-router-dom';\nimport dummy from '../assets/logo.png';\n\nconst RecipeThumbnail: FC<{ metadata: Metadata }> = ({ metadata }) => {\n  const isCategory = metadata.recipes !== undefined;\n  return (\n    <Link\n      to={\n        isCategory\n          ? ROUTE_CATEGORY(\n              metadata.type,\n              (metadata as CategoryMetadata).category\n            )\n          : ROUTE_RECIPE(metadata.type, (metadata as RecipeMetadata).id)\n      }\n    >\n      <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            // height=\"450\"\n            image={dummy}\n            alt=\"green iguana\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              Lizard\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Lizards are a widespread group of squamate reptiles, with over\n              6,000 species, ranging across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  );\n};\n// <Box width={'100%'} display=\"flex\" justifyContent={'center'}>\n//   <Card sx={{ maxHeight: '480px', width: '80%', marginBottom: 1 }}>\n//     {isCategory ? (\n//       <ImageList\n//         sx={{ width: '100%', height: '480px' }}\n//         variant=\"quilted\"\n//         cols={2}\n//         // rowHeight={\"240px\"}\n//       >\n//         {[].map((item) => (\n//           <ImageListItem\n//           // key={item.img}\n//           // cols={item.cols || 1}\n//           // rows={item.rows || 1}\n//           >\n//             {/* <img\n//                  {...srcset(item.img, 121, item.rows, item.cols)}\n//                  alt={item.title}\n//                  loading=\"lazy\"\n//                /> */}\n//           </ImageListItem>\n//         ))}\n//       </ImageList>\n//     ) : (\n//       <img\n//         // srcSet={`${metadata.imgURL}?h=480&fit=object-cover&auto=format`}\n//         src={dummy}\n//         alt={metadata.title}\n//         loading=\"lazy\"\n//         height=\"480px\"\n//       />\n//     )}\n//   </Card>\n// </Box>\n// <Typography sx={{ textDecoration: 'none' }} textAlign={'center'}>\n//   {metadata.title}\n// </Typography>\n\n// type RecipeCellProps = {\n//   recipe: RecipeMetadata;\n//   category?: string;\n// };\n\n// const RecipeCell: FC<RecipeCellProps> = ({ recipe, category }) => {\n//   return (\n//     <Link to={ROUTE_RECIPE(recipe.type, recipe.id, category)}>\n//       <img src={recipe.imgURL} alt=\"\" className=\"object-cover h-[480px]\" />\n//       <p className=\"pt-2 text-md\">{recipe.title}</p>\n//     </Link>\n//   );\n// };\n\nexport default RecipeThumbnail;\n"],"mappings":";AAEA,SAEEA,IAAI,EACJC,cAAc,EACdC,WAAW,EACXC,SAAS,EAGTC,UAAU,QACL,eAAe;AACtB,SAASC,cAAc,EAAEC,YAAY,QAAQ,WAAW;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACpE,MAAMC,UAAU,GAAGD,QAAQ,CAACE,OAAO,KAAKC,SAAS;EACjD,oBACEL,OAAA,CAACH,IAAI;IACHS,EAAE,EACAH,UAAU,GACNR,cAAc,CACZO,QAAQ,CAACK,IAAI,EACZL,QAAQ,CAAsBM,QACjC,CAAC,GACDZ,YAAY,CAACM,QAAQ,CAACK,IAAI,EAAGL,QAAQ,CAAoBO,EAAE,CAChE;IAAAC,QAAA,eAEDV,OAAA,CAACV,IAAI;MAACqB,EAAE,EAAE;QAAEC,SAAS,EAAE,OAAO;QAAEC,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAJ,QAAA,eAC9DV,OAAA,CAACT,cAAc;QAAAmB,QAAA,gBACbV,OAAA,CAACP,SAAS;UACRsB,SAAS,EAAC;UACV;UAAA;UACAC,KAAK,EAAElB,KAAM;UACbmB,GAAG,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFrB,OAAA,CAACR,WAAW;UAAAkB,QAAA,gBACVV,OAAA,CAACN,UAAU;YAAC4B,YAAY;YAACC,OAAO,EAAC,IAAI;YAACR,SAAS,EAAC,KAAK;YAAAL,QAAA,EAAC;UAEtD;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbrB,OAAA,CAACN,UAAU;YAAC6B,OAAO,EAAC,OAAO;YAACC,KAAK,EAAC,gBAAgB;YAAAd,QAAA,EAAC;UAGnD;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAI,EAAA,GArFMxB,eAA2C;AAuFjD,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}