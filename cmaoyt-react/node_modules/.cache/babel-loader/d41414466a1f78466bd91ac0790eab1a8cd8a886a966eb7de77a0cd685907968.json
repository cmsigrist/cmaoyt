{"ast":null,"code":"var _jsxFileName = \"/home/cbsigrist/webdev/cmaoyt_spring/cmaoyt-react/src/components/RecipeGrid.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport RecipeThumbnail from \"./RecipeThumbnail\";\nimport { api } from \"../api/axiosConfig\";\nimport { Grid } from \"@mui/material\";\nimport { dummies } from \"./dummies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeGrid = ({\n  type\n}) => {\n  _s();\n  const [metadata, setMetadata] = useState([]);\n  useEffect(() => {\n    api(type).get(\"/all\").then(result => setMetadata(result.data)).catch(() => {\n      setMetadata(dummies);\n    });\n    // .catch((reason) => console.error(reason));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    width: \"100%\",\n    container: true,\n    spacing: 3,\n    children: metadata.map((m, i) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(RecipeThumbnail, {\n        metadata: m\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeGrid, \"p8LydVGhq2sTkuABOp61r5d0UaM=\");\n_c = RecipeGrid;\nexport default RecipeGrid;\nvar _c;\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"names":["useEffect","useState","RecipeThumbnail","api","Grid","dummies","jsxDEV","_jsxDEV","RecipeGrid","type","_s","metadata","setMetadata","get","then","result","data","catch","width","container","spacing","children","map","m","i","item","xs","sm","md","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cbsigrist/webdev/cmaoyt_spring/cmaoyt-react/src/components/RecipeGrid.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport { Metadata, RecipeType } from \"../types/recipe\";\nimport RecipeThumbnail from \"./RecipeThumbnail\";\nimport { api } from \"../api/axiosConfig\";\nimport { Box, Grid } from \"@mui/material\";\nimport { dummies } from \"./dummies\";\n\nconst RecipeGrid: FC<{ type: RecipeType }> = ({ type }) => {\n  const [metadata, setMetadata] = useState<Metadata[]>([]);\n\n  useEffect(() => {\n    api(type)\n      .get(\"/all\")\n      .then((result) => setMetadata(result.data))\n      .catch(() => {\n        setMetadata(dummies);\n      });\n    // .catch((reason) => console.error(reason));\n  }, []);\n\n  return (\n    <Grid width={\"100%\"} container spacing={3}>\n      {metadata.map((m, i) => (\n        <Grid key={i} item xs={12} sm={6} md={4}>\n          <RecipeThumbnail metadata={m} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default RecipeGrid;\n"],"mappings":";;AAAA,SAAaA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAAcC,IAAI,QAAQ,eAAe;AACzC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAoC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAa,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACdG,GAAG,CAACM,IAAI,CAAC,CACNI,GAAG,CAAC,MAAM,CAAC,CACXC,IAAI,CAAEC,MAAM,IAAKH,WAAW,CAACG,MAAM,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAAC,MAAM;MACXL,WAAW,CAACP,OAAO,CAAC;IACtB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEE,OAAA,CAACH,IAAI;IAACc,KAAK,EAAE,MAAO;IAACC,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACvCV,QAAQ,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACjBjB,OAAA,CAACH,IAAI;MAASqB,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAP,QAAA,eACtCd,OAAA,CAACL,eAAe;QAACS,QAAQ,EAAEY;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADvBR,CAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACtB,EAAA,CAtBIF,UAAoC;AAAAyB,EAAA,GAApCzB,UAAoC;AAwB1C,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}